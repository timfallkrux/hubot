{
  "name": "flowdock",
  "version": "0.5.0",
  "description": "Flowdock client library for node.js",
  "keywords": [
    "flowdock"
  ],
  "author": {
    "name": "Ville Lautanala",
    "email": "lautis@gmail.com"
  },
  "bugs": {
    "url": "http://github.com/flowdock/node-flowdock"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/mit-license.php"
    }
  ],
  "repositories": [
    {
      "type": "git",
      "url": "http://github.com/flowdock/node-flowdock.git"
    }
  ],
  "main": "index",
  "directories": {
    "lib": "./lib"
  },
  "dependencies": {
    "buffertools": "1.1.0",
    "request": "2.12.0"
  },
  "devDependencies": {
    "coffee-script": ">=1.3.0",
    "mocha": "1.7.4",
    "colors": "0.6.0-1"
  },
  "scripts": {
    "test": "make test",
    "prepublish": "make build"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "readme": "# node-flowdock [![Build Status](https://secure.travis-ci.org/flowdock/node-flowdock.png?branch=master)](http://travis-ci.org/flowdock/node-flowdock)\n\nFlowdock Streaming client for node.js. Listen to messages from Flowdock in real-time and post new messages.\n\n## Installation\n\n    npm install flowdock\nor\n\n    # in package.json\n    \"dependencies\": {\n      \"node-flowdock\": \"latest\"\n    }\n\n## Example usage\n\nFlows are stringly typed. Either subdomain:flow or subdomain/flow can be used. This may change in future versions.\n\n#### Opening and closing a stream\n```javascript\nvar Session = require('./flowdock').Session;\n\nvar session = new Session(username, password);\nvar stream = session.stream('example/main');\nstream.end();\n```\nThe argument(s) for stream() can be a string ('subdomain/flow') or an array (['subdomain/flow', 'subdomain/anotherflow']).\n\nsession.stream() returns an instance of EventEmitter. Currently it emits two types of events:\n\n* `error` is emitted with a response status code and an error message. This can happen when a connection can't be estabilished or you don't have access to one or more flows you tried to stream.\n* `message` is emitted when the `stream` receives a JSON message.\n\n#### Listen to messages\n```javascript\nstream = session.stream(flow);\nstream.on('message', function(message) {\n  // Do stuff with message\n  return stream.end();\n});\n```\nThe full message format specification for different message types is in [Flowdock API Message documentation](https://www.flowdock.com/api/messages).\n\n#### Set your status for a flow\n```javascript\nsession.status('example:main', 'I just got the first message through the Flowdock stream API.');\n```\nBoth arguments should be strings. Setting a status is flow specific.\n\n#### Post a chat message to a flow\n```javascript\nsession.message('example:main', 'Isn\\'t this cool?');\n```\nBoth arguments should be strings. Sending a message is flow specific.\n\n#### Post a chat message to a private chat\n```javascript\nsession.privateMessage(12345, 'Hi, this is a secret message!');\n```\nThe first argument is the recipient's ID.\n\n#### Fetch and stream all the flows your user has an access\n\n```javascript\nsession.flows(function(flows) {\n  var anotherStream, flowIds;\n  flowIds = flows.map(function(f) {\n    return f.id;\n  });\n  anotherStream = session.stream(flowIds);\n  return anotherStream.on('message', function(msg) {\n    console.log('message from stream:', msg);\n    // variable 'msg' being something like:\n    // {\n    //   event: 'activity.user',\n    //   flow: 'subdomain:flow',\n    //   content: { last_activity: 1329310503807 },\n    //   user: '12345',\n    //   .. plus few other fields\n    // }\n  });\n});\n```\nThe full message format specification for different message types is in [Flowdock API Message documentation](https://www.flowdock.com/api/messages).\n\n## Development\n\nYou'll need ```coffee-script```, ```mocha``` and ```colors``` for development, just run ```npm install```. Code can be compiled to .js with command ```make build```.\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "http://github.com/flowdock/node-flowdock.git"
  },
  "_id": "flowdock@0.5.0",
  "_from": "flowdock@0.5.x"
}
